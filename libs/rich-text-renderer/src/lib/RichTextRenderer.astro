---
interface Props {
  data: any
}

const { data } = Astro.props
---
<>
  {data.map(field => (
    <>
      {field.type === 'paragraph' && (
        <p id={field.id} class="mb-2 text-prose" set:html={field.data.text} />)}
      {field.type === 'header' && (
        <>
          {field.data.level === 1 && (
            <h1 id={field.id} class="text-4xl mb-2" set:html={field.data.text}/>
          )}
          {field.data.level === 2 && (
            <h2 id={field.id} class="text-3xl mb-2" set:html={field.data.text}/>
          )}
          {field.data.level === 3 && (
            <h3 id={field.id} class="text-2xl mb-2" set:html={field.data.text}/>
          )}
          {field.data.level === 4 && (
            <h4 id={field.id} class="text-l mb-2" set:html={field.data.text}/>
          )}
          {field.data.level === 5 && (
            <h5 id={field.id} class="mb-2" set:html={field.data.text}/>
          )}
          {field.data.level === 6 && (
            <h6 id={field.id} class="mb-2" set:html={field.data.text}/>
          )}
        </>
      )}
      {field.type === 'list' && (
        <>
          {field.data.style === 'unordered' && (
            <ul id={field.id} class="list-inside list-disc mb-2">
              {field.data.items.map(item => (
                <li set:html={item} />
              ))}
            </ul>
          )}
          {field.data.style === 'ordered' && (
            <ol id={field.id} class="list-inside list-decimal mb-2">
              {field.data.items.map(item => (
                <li class="mb-1">{item}</li>
              ))}
            </ol>
          )}
        </>
      )}
    </>
  ))}
</>

<style is:global>
  p.text-prose > a {
    text-decoration: underline;
    text-decoration-skip-ink: auto;
  }
</style>
