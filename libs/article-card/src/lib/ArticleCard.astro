---
interface Props {
  post?: {
    title: string
    shareCard?: string
    description: string
    slug: string
    embed?: {
      link: string
      type: 'spotify' | 'youtube'
    }
    tags?: Array<{
      slug: string
      title: string
    }>
  }
}

const { post } = Astro.props
---
<article class="bg-secondary">
  {post.shareCard && (
    <a href={`/posts/${post.slug}`}><img src={post.shareCard} /></a>
  )}
  <div class="py-5">
    <h2 class="card-title text-inherit">
      <a class="hover:underline" href={`/posts/${post.slug}`}>{post.title}</a>
    </h2>
    {(!post.embed && post.description) && <p class="text-inherit">{post.description}</p>}
    {post.embed?.link && (
      <div>
        {post.embed.type === 'youtube' && (
          <iframe width="560" height="315" src={post.embed.link} title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        )}
        {post.embed?.link && post.embed.type === 'spotify' && (
          <iframe style="border-radius:12px" src={post.embed.link} width="100%" height="352" frameborder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>
      )}
      </div>
    )}
    {post?.tags?.length ? (
      <div class="card-actions mt-5 justify-end items-center">
        <span>This article is about:</span>
        {post.tags.map(tag => (
          <a href={`/tags/${tag.slug}`} class="badge badge-outline hover:badge-primary hover:text-white">{tag.title}</a>
        ))}
      </div>
    ) : null}
  </div>
</article>
